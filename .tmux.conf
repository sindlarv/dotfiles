# https://stackoverflow.com/a/40902312
run-shell 'tmux setenv -g TMUX_VERSION "$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")"'

###############################################################################
# STATUS BAR
###############################################################################

# status bar
set-option -g status-interval 10
set-option -g status-justify centre # center align window list
set-option -g status-left-length 30
set-option -g status-right-length 140
set-option -g status-left '#[fg=green,dim]#H #[fg=black]• #[fg=green,dim]#(uptime | sed s/^\ // | tr -s \  | cut -d\  -f3-4 | cut -d, -f1)'
# compress the uptime string with sed, so that it doesn't take up as much space
#set-option -g status-left '#[fg=green,dim]#15h #[fg=black]• #[fg=green,dim]#(uptime | cut -d" " -f4-5 | sed -e 's/\(.[0-9]*\)\([^ ]*\s\)\(.\)\(.*\)/\1\3/')
if-shell -b '[ "$(uname -s)" = "Linux" ]' " \
    set-option -g status-right '#[fg=black]#[bg=yellow,dim]#(cat /proc/loadavg | cut -d\  -f3)#[default] #[fg=white]%Y-%m-%d %H:%M#[default]'"
if-shell -b '[ "$(uname -s)" = "Darwin" ] || [ "$(uname -s)" = "OpenBSD" ]' " \
    set-option -g status-right '#[fg=black]#[bg=yellow,dim]#(sysctl -n vm.loadavg | cut -d\  -f3)#[default] #[fg=white]%Y-%m-%d %H:%M#[default]'"


###############################################################################
# KEY BINDINGS
###############################################################################

# Re-bind the prefix key to C-a
set-option -g prefix C-a
bind-key C-a last-window

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Use vi-style key bindings
set-window-option -g mode-keys vi

# Add vi copy/paste mode
# bind-key syntax changed in 2.4 -- selection / copy / paste
# tmux < 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' " \
   bind-key -t vi-copy v   begin-selection; \
   bind-key -t vi-copy V   send -X select-line; \
   bind-key -t vi-copy C-v rectangle-toggle"

# tmux < 2.4 and Linux
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ] && [ "$(uname -s)" = "Linux" ]' " \
   bind-key -t vi-copy y   copy-pipe 'xclip -selection clipboard -in'"

# tmux < 2.4 and MacOS
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ] && [ "$(uname -s)" = "Darwin" ]' " \
   bind-key -t vi-copy y   copy-pipe 'reattach-to-user-namespace pbcopy'"

# tmux >= 2.4
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ] || [ "$(uname -s)" = "OpenBSD" ]' " \
   bind-key -T copy-mode-vi v   send -X begin-selection; \
   bind-key -T copy-mode-vi V   send -X select-line; \
   bind-key -T copy-mode-vi C-v send -X rectangle-toggle"

# tmux >= 2.4 and Linux
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ] && [ "$(uname -s)" = "Linux" ]' " \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

# tmux >= 2.4 and MacOS
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ] && [ "$(uname -s)" = "Darwin" ]' " \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'"

# just for OpenBSD
if-shell -b '[ "$(uname -s)" = "OpenBSD" ]' " \
   bind-key -T copy-mode-vi y   send -X copy-pipe-and-cancel 'xclip -selection clipboard -in'"

# Shift+left/right cycles through windows
bind-key -n S-right next-window
bind-key -n S-left previous-window

# Reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Allows for faster key repetition
set-option -s escape-time 0

# Make Home and End keys work in copy mode
# MacBooks do not have Home/End keys
if-shell -b '[ "$(uname -s)" = "Linux" ] || [ "$(uname -s)" = "OpenBSD" ]' " \
    unbind-key -T copy-mode-vi 'Home'; \
    bind-key -T copy-mode-vi 'Home' send -X start-of-line; \
    unbind-key -T copy-mode-vi 'End'; \
    bind-key -T copy-mode-vi 'End' send -X end-of-line"

# Panes related
# vi-like hjkl pane traversal
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
# resize panes using PREFIX H, J, K, L
#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind K resize-pane -U 5
#bind L resize-pane -R 5

# Make split window functions use more intuitive key bindings
# unbind the original key
unbind %
bind | split-window -h
# unbind the original key
unbind '"'
bind - split-window -v


###############################################################################
# COLORS
###############################################################################

# Make colors look nice in 256-color terminals
set-option -g default-terminal "xterm-256color"

# Set
# - default statusbar colors
# - default window title colors
# - active window title colors
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.9" | bc)" = 1 ]' " \
    set-option -g status-fg white; \
    set-option -g status-bg black; \
    set-option -g status-attr bright; \
    set-window-option -g window-status-fg white; \
    set-window-option -g window-status-bg default; \
    set-window-option -g window-status-attr dim; \
    set-window-option -g window-status-current-fg white; \
    set-window-option -g window-status-current-bg red; \
    set-window-option -g window-status-current-attr bright"

if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.9" | bc)" = 1 ] || [ "$(uname -s)" = "OpenBSD" ]' " \
    set-option -g status-style fg=white,bg=black,bright; \
    set-window-option -g window-status-style fg=white,bg=default,dim; \
    set-window-option -g window-status-current-style fg=white,bg=red,bright"


###############################################################################
# MISC
###############################################################################

# Activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# Make xterm sequences like CTRL-arrow etc. work
set-window-option -g xterm-keys on

# Enable wm window titles
set-option -g set-titles on

# Rename windows automatically
set-window-option -g automatic-rename on

# Set wm window title string (uses statusbar variables)
set-option -g set-titles-string "#I [ #W ]"

# Disable tmux' behavior to hijack mouse pointer
set-option -g mouse off

# Change scrollback buffer size limit (default value: 2000)
set-option -g history-limit 50000

# Display messages for 1 second (default value: 750 ms)
set-option -g display-time 1000


###############################################################################
# Tmux Plugin Manager: https://github.com/tmux-plugins/tpm
###############################################################################

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-copycat'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Plugin configuration
set -g @resurrect-save-shell-history 'on'

# Initialize the manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
