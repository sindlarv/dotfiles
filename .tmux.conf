###############################################################################
# STATUS BAR
###############################################################################

# status bar
set-option -g status-utf8 on

set-option -g status-interval 1
set-option -g status-justify centre # center align window list
set-option -g status-left-length 30
set-option -g status-right-length 140
#set-option -g status-left '#[fg=green]#H #[fg=black]• #[fg=green,bright]#(uname -r | cut -c 1-6)#[default]'
#set-option -g status-right '#[fg=green,bg=black,bright]#(tmux-mem-cpu-load 1) #[fg=red,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d'
set-option -g status-left '#[fg=green,dim]#H #[fg=black]• #[fg=green,dim]#(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",")'
# compress the uptime string with sed, so that it doesn't take up as much space
#set-option -g status-left '#[fg=green,dim]#15h #[fg=black]• #[fg=green,dim]#(uptime | cut -f 4-5 -d " " | sed -e 's/\(.[0-9]*\)\([^ ]*\s\)\(.\)\(.*\)/\1\3/')
set-option -g status-right '#[fg=black]#[bg=yellow,dim]#(cut -d " " -f 1 /proc/loadavg)#[default] #[fg=white]%Y-%m-%d %H:%M#[default]'


###############################################################################
# KEY BINDINGS
###############################################################################

# Re-bind the prefix key to C-a
set-option -g prefix C-a
bind-key C-a last-window

# Allows us to use C-a a <command> to send commands to a TMUX session inside
# another TMUX session
bind-key a send-prefix

# Use vi-style key bindings
set-window-option -g mode-keys vi

# Add vi copy/paste mode
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'V' rectangle-toggle

# xsel way
# Copy tmux buffer to clipboard
#bind-key C-y run "tmux show-buffer | xsel -b"
# Move x clipboard into tmux paste buffer
#bind-key C-p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# xclip way
# http://unix.stackexchange.com/questions/15715/getting-tmux-to-copy-a-buffer-to-the-clipboard
# move tmux copy buffer into x clipboard
bind-key C-y run "tmux save-buffer - | xclip -selection clipboard"\; display-message "Buffer copied to clipboard"
# this one copies *selection* buffer, not actual clipboard content
#bind-key C-y run "tmux save-buffer - | xclip -i"
# move x clipboard into tmux paste buffer
#bind-key C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
bind-key C-p run "xclip -o | tmux load-buffer - ; tmux paste-buffer"

# Shift+left/right cycles through windows
bind-key -n S-right next-window
bind-key -n S-left previous-window

# Reload config
bind-key r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Allows for faster key repetition
set-option -s escape-time 0

# Make Home and End keys work in copy mode
unbind-key -t vi-copy Home
bind-key -t vi-copy Home start-of-line
unbind-key -t vi-copy End
bind-key -t vi-copy End end-of-line

# Panes related
# vi-like hjkl pane traversal
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R
# resize panes using PREFIX H, J, K, L
#bind H resize-pane -L 5
#bind J resize-pane -D 5
#bind K resize-pane -U 5
#bind L resize-pane -R 5

# Make split window functions use more intuitive key bindings
# unbind the original key
unbind %
bind | split-window -h
# unbind the original key
unbind '"'
bind - split-window -v


###############################################################################
# COLORS
###############################################################################

# Make colors look nice in 256-color terminals
set-option -g default-terminal "xterm-256color"

# Default statusbar colors
set-option -g status-fg white
set-option -g status-bg black
set-option -g status-attr bright

# Default window title colors
set-window-option -g window-status-fg white
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# Active window title colors
set-window-option -g window-status-current-fg white
set-window-option -g window-status-current-bg red
set-window-option -g window-status-current-attr bright


###############################################################################
# MISC
###############################################################################

# Activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity off

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# ??
set-window-option -g xterm-keys on

# Enable wm window titles
set-option -g set-titles on

# Rename windows automatically
set-window-option -g automatic-rename on

# wm window title string (uses statusbar variables)
set-option -g set-titles-string "#I [ #W ]"

# rm mouse mode fail
set-option -g mode-mouse off


###############################################################################
# SESSION INIT
###############################################################################

# session initialization
#new-session -n log watch -n 10 tail -n 5 /var/log/dmesg /var/log/syslog /var/log/auth.log
#new-session -n monitor
#new-window -n work "cd ~/projekty"
#new-window -n scripts
#new-window -n test
#select-window -t 1
